%% This BibTeX bibliography file was created using BibDesk.
%% https://bibdesk.sourceforge.io/

%% Created for Thomas Suau at 2024-05-16 19:33:23 +0200 


%% Saved with string encoding Unicode (UTF-8) 



@inproceedings{brun20,
	author = {Lars, Br{\"u}njes and Murdoch J., Gabbay},
	booktitle = {Leveraging Applications of Formal Methods, Verification and Validation: Applications},
	date-added = {2024-05-16 19:30:15 +0200},
	date-modified = {2024-05-16 19:32:34 +0200},
	keywords = {utxo, extended utxo model, smart contract},
	month = {October},
	pages = {73-88},
	publisher = {Spinger, Cham},
	title = {UTxO- vs Account-Based Smart Contract Blockchain Programming Paradigms},
	volume = {12478},
	year = {2020}}

@inproceedings{chak20,
	author = {Manuel, M.T., Chakravaty and James, Chapman and Philip, Wadler and \& alt.},
	booktitle = {Financial Cryptography and Data Security},
	date-added = {2024-05-16 19:25:09 +0200},
	date-modified = {2024-05-16 19:28:29 +0200},
	keywords = {utxo, extended utxo model, crypto conf},
	month = {August},
	pages = {525-539},
	publisher = {Springer, Cham},
	title = {The extended UTXO Model},
	year = {2020}}

@book{brak19,
	author = {Harris, Brakmi{\'c}},
	date-added = {2024-05-16 19:05:10 +0200},
	date-modified = {2024-05-16 19:10:28 +0200},
	month = {November},
	publisher = {Apress, Berkeley, CA},
	title = {Bitcoin Script. in Bitcoin and Lightning Network on Raspberry Pi: Running Nodes on Pi3, Pi4 and Pi Zero},
	year = {2019}}

@misc{eth-paper,
	author = {Vitalik, Butherin},
	date-added = {2024-05-16 19:01:13 +0200},
	date-modified = {2024-05-16 19:03:04 +0200},
	howpublished = {\href{https://ethereum.org/en/whitepaper/}{Official link}},
	keywords = {ethereum, whitepaper},
	title = {Ethereum Whitepaper},
	year = {2014}}

@misc{stamps-docs,
	author = {mikeinspace},
	date-added = {2024-05-16 18:58:44 +0200},
	date-modified = {2024-05-16 19:00:54 +0200},
	howpublished = {\href{https://docs.openstamp.io/introduction/btc-stamps}{Official Documentation}},
	keywords = {stamps, protocol, documentation},
	month = {February},
	title = {BTC Stamps protocol},
	year = {2023}}

@misc{atom-docs,
	author = {Atom community},
	date-added = {2024-05-16 18:42:49 +0200},
	date-modified = {2024-05-16 18:45:17 +0200},
	howpublished = {\href{https://atomicals-community.github.io/atomicals-guide/}{Community Guide}},
	keywords = {atomicals, documentation, protocol},
	title = {Atomicals Documentation},
	year = {2024}}

@misc{lin23,
	author = {Robin Linus},
	date-added = {2024-05-10 17:57:53 +0200},
	date-modified = {2024-05-10 18:06:50 +0200},
	howpublished = {\href{https://bitvm.org/bitvm.pdf}{Whitepaper}},
	keywords = {bitvm, computation, logic, bitcoin},
	month = {December 12},
	title = {BitVM: Compute Anything on Bitcoin},
	year = {2023},
	bdsk-file-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhYYm9va21hcmtfECUuLi8uLi8uLi8uLi8uLi8uLi9Eb3dubG9hZHMvYml0dm0ucGRmTxEDlGJvb2uUAwAAAAAEEDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJACAAAFAAAAAQEAAFVzZXJzAAAACgAAAAEBAAB0aG9tYXNzdWF1AAAJAAAAAQEAAERvd25sb2FkcwAAAAkAAAABAQAAYml0dm0ucGRmAAAAEAAAAAEGAAAEAAAAFAAAACgAAAA8AAAACAAAAAQDAABcUwAAAAAAAAgAAAAEAwAAZKEDAAAAAAAIAAAABAMAAJehAwAAAAAACAAAAAQDAAB+LTgLAAAAABAAAAABBgAAaAAAAHgAAACIAAAAmAAAAAgAAAAABAAAQcX3PsDG9vUYAAAAAQIAAAEAAAAAAAAADwAAAAAAAAAAAAAAAAAAAAgAAAAEAwAAAgAAAAAAAAAEAAAAAwMAAPUBAAAIAAAAAQkAAGZpbGU6Ly8vDAAAAAEBAABNYWNpbnRvc2ggSEQIAAAABAMAAADgAePoAAAACAAAAAAEAABBxVryfwAAACQAAAABAQAAN0VDQzhGNzAtMjg5NS00NDVCLUEyQTUtMjIxRkE0QTExNkI2GAAAAAECAACBAAAAAQAAAO8TAAABAAAAAAAAAAAAAAABAAAAAQEAAC8AAAAAAAAAAQUAANcAAAABAgAANDRiODA2ZTRmNWJhYWI5MDRiMGQ5ODJmMGM5YmMxMTc5Nzc5M2VjZWI2MmE1Y2YxNDMzYzMzNDM1ZjBlYWM2NTswMDswMDAwMDAwMDswMDAwMDAwMDswMDAwMDAwMDswMDAwMDAwMDAwMDAwMDIwO2NvbS5hcHBsZS5hcHAtc2FuZGJveC5yZWFkLXdyaXRlOzAxOzAxMDAwMDA2OzAwMDAwMDAwMGIzODJkN2U7M2U7L3VzZXJzL3Rob21hc3N1YXUvZG93bmxvYWRzL2JpdHZtLnBkZgAAzAAAAP7///8BAAAAAAAAABAAAAAEEAAAUAAAAAAAAAAFEAAAqAAAAAAAAAAQEAAA0AAAAAAAAABAEAAAwAAAAAAAAAACIAAAnAEAAAAAAAAFIAAADAEAAAAAAAAQIAAAHAEAAAAAAAARIAAAUAEAAAAAAAASIAAAMAEAAAAAAAATIAAAQAEAAAAAAAAgIAAAfAEAAAAAAAAwIAAAqAEAAAAAAAABwAAA8AAAAAAAAAARwAAAFAAAAAAAAAASwAAAAAEAAAAAAACA8AAAsAEAAAAAAAAACAANABoAIwBLAAAAAAAAAgEAAAAAAAAABQAAAAAAAAAAAAAAAAAAA+M=}}

@misc{ordinals-protocol,
	abstract = {This handbook is a guide to ordinal theory. Ordinal theory concerns itself with satoshis, giving them individual identities and allowing them to be tracked, transferred, and imbued with meaning.

Satoshis, not bitcoin, are the atomic, native currency of the Bitcoin network. One bitcoin can be sub-divided into 100,000,000 satoshis, but no further.

Ordinal theory does not require a sidechain or token aside from Bitcoin, and can be used without any changes to the Bitcoin network. It works right now.

Ordinal theory imbues satoshis with numismatic value, allowing them to be collected and traded as curios.

Individual satoshis can be inscribed with arbitrary content, creating unique Bitcoin-native digital artifacts that can be held in Bitcoin wallets and transferred using Bitcoin transactions. Inscriptions are as durable, immutable, secure, and decentralized as Bitcoin itself.

Other, more unusual use-cases are possible: off-chain colored-coins, public key infrastructure with key rotation, a decentralized replacement for the DNS. For now though, such use-cases are speculative, and exist only in the minds of fringe ordinal theorists.

For more details on ordinal theory, see the overview.

For more details on inscriptions, see inscriptions.

When you're ready to get your hands dirty, a good place to start is with inscriptions, a curious species of digital artifact enabled by ordinal theory.

},
	author = {Open Ordinals Institute},
	date-added = {2024-03-27 13:56:58 +0100},
	date-modified = {2024-03-27 13:58:23 +0100},
	howpublished = {\href{https://docs.ordinals.com}{Official Documentation}},
	keywords = {ordinals, handbook},
	month = {January},
	title = {Ordinals Handbook},
	year = {2024}}

@misc{bip-0341,
	abstract = {Abstract
This document proposes a new SegWit version 1 output type, with spending rules based on Taproot, Schnorr signatures, and Merkle branches.
Copyright
This document is licensed under the 3-clause BSD license.
Motivation
This proposal aims to improve privacy, efficiency, and flexibility of Bitcoin's scripting capabilities without adding new security assumptions[1]. Specifically, it seeks to minimize how much information about the spendability conditions of a transaction output is revealed on chain at creation or spending time and to add a number of upgrade mechanisms, while fixing a few minor but long-standing issues.},
	author = {Pieter Wuille and Jonas Nick and Anthony Towns},
	date-added = {2024-03-27 13:50:23 +0100},
	date-modified = {2024-05-16 19:21:55 +0200},
	howpublished = {\href{httpshttps://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki}{bip-0341}},
	keywords = {bip, Taproot, 341},
	month = {January},
	title = {Taproot: SegWit version 1 spending rules},
	year = {2020}}

@misc{bip-0342,
	abstract = {This document specifies the semantics of the initial scripting system under BIP341.
},
	author = {Pieter Wuille and Jonas Nick and Anthony Towns},
	date-added = {2024-04-27 13:50:23 +0100},
	date-modified = {2024-05-16 19:21:48 +0200},
	howpublished = {\href{httpshttps://github.com/bitcoin/bips/blob/master/bip-0342.mediawiki}{bip-0342}},
	keywords = {bip, Taproot, 342, tapscript},
	month = {January},
	title = {Validation of Taproot Scripts},
	year = {2020}}

@article{lightning-network,
	abstract = {The bitcoin protocol can encompass the global financial transaction volume in all electronic payment systems today, without a single
custodial third party holding funds or requiring participants to have
anything more than a computer using a broadband connection. A
decentralized system is proposed whereby transactions are sent over
a network of micropayment channels (a.k.a. payment channels or
transaction channels) whose transfer of value occurs off-blockchain.
If Bitcoin transactions can be signed with a new sighash type that
addresses malleability, these transfers may occur between untrusted
parties along the transfer route by contracts which, in the event of uncooperative or hostile participants, are enforceable via broadcast over
the bitcoin blockchain in the event of uncooperative or hostile participants, through a series of decrementing timelocks.},
	author = {Joseph, Poon ; Thaddeus, Dryja},
	date-added = {2024-03-27 13:45:20 +0100},
	date-modified = {2024-03-27 14:01:14 +0100},
	howpublished = {\href{lightning.network}{LN}},
	keywords = {Lightning network, whitepaper},
	month = {January},
	title = {The Bitcoin Lightning Network: Scalable Off-Chain Instant Payments},
	year = {2016}}

@misc{bip-0322,
	author = {Karl-Johan Alm},
	date-added = {2024-03-27 13:18:40 +0100},
	date-modified = {2024-03-27 13:30:25 +0100},
	howpublished = {\href{https://github.com/bitcoin/bips/blob/master/bip-0322.mediawiki}{bip-0322}},
	keywords = {bip, bitcoin script, miniscript, op\_code},
	lastchecked = {03/27/2024},
	month = {September},
	title = {Generic Signed Message Format},
	year = {2018}}

@article{whitepaper-btc,
	abstract = { A purely peer-to-peer version of electronic cash would allow online
payments to be sent directly from one party to another without going through a
financial institution. Digital signatures provide part of the solution, but the main
benefits are lost if a trusted third party is still required to prevent double-spending.
We propose a solution to the double-spending problem using a peer-to-peer network.
The network timestamps transactions by hashing them into an ongoing chain of
hash-based proof-of-work, forming a record that cannot be changed without redoing
the proof-of-work. The longest chain not only serves as proof of the sequence of
events witnessed, but proof that it came from the largest pool of CPU power. As
long as a majority of CPU power is controlled by nodes that are not cooperating to
attack the network, they'll generate the longest chain and outpace attackers. The
network itself requires minimal structure. Messages are broadcast on a best effort
basis, and nodes can leave and rejoin the network at will, accepting the longest
proof-of-work chain as proof of what happened while they were gone.},
	author = {Satoshi Nakamoto},
	date-added = {2024-03-27 13:14:26 +0100},
	date-modified = {2024-03-27 13:16:08 +0100},
	journal = {bitcoin.org},
	keywords = {Bitcoin, satoshi nakamoto, whitepaper, btc},
	title = {Bitcoin: A Peer-to-Peer Electronic Cash System},
	year = {2008}}

@misc{tx-tuto,
	author = {Chaincodelabs},
	date-added = {2024-04-27 00:22:40 +0100},
	date-modified = {2024-04-27 00:22:40 +0100},
	howpublished = {\href{https://github.com/chaincodelabs/bitcoin-tx-tutorial/tree/main}{Bitcoin Transaction Tutorial}},
	keywords = {Bitcoin, transaction, tutorial},
	lastchecked = {04/27/2024},
	title = {Bitcoin Transaction Tutorial},
	year = {2022}}

@misc{miniscript,
	author = {Pieter Wuille and Andrew Poelstra and Sanket Kanjalkar},
	date-added = {2024-04-27 00:22:40 +0100},
	date-modified = {2024-05-16 19:21:10 +0200},
	howpublished = {\href{https://bitcoin.sipa.be/miniscript/}{Miniscript}},
	keywords = {Bitcoin, miniscript, script},
	lastchecked = {04/27/2024},
	title = {Bitcoin Miniscript},
	year = {2019}}

@article{bart17,
	abstract = {The Bitcoin protocol allows to save arbitrary data on the blockchain through a special instruction of the scripting language, called \texttt{OP\_RETURN}. A growing number of protocols exploit this feature to extend the range of applications of the Bitcoin blockchain beyond transfer of currency. A point of debate in the Bitcoin community is whether loading data through \texttt{OP\_RETURN} can negatively affect the performance of the Bitcoin network with respect to its primary goal. This paper is an empirical study of the usage of \texttt{OP\_RETURN} over the years. We identify several protocols based on \texttt{OP\_RETURN}, which we classify by their application domain. We measure the evolution in time of the usage of each protocol, the distribution of \texttt{OP\_RETURN} transactions byapplication domain, and their space consumption.},
	author = {Massimo Bartoletti and Livio Pompianu},
	date-modified = {2024-05-16 19:22:06 +0200},
	journal = {Financial Cryptography and Data Security},
	keywords = {Bitcoin, OP_RETURN, blockchain, data storage},
	title = {An Analysis of Bitcoin OP\_RETURN Metadata},
	year = {2017}}

@article{abdul23,
	abstract = {The Lightning Network (LN), a second-layer protocol built atop Bitcoin, promises swift, low-cost transactions, thereby addressing blockchain scalability and enhancing user privacy. As the global financial technology landscape evolves, the LN's importance in the future of fintech and the Fourth Industrial Revolution (4IR) becomes increasingly pivotal. The anticipated rise of blockchain-based payments and smart contracts in businesses demands a more agile and secure payment system. However, the LN's early stage raises valid concerns about security and reliability, especially when implemented on a huge asymmetric network such as the Internet, potentially hindering its broader adoption. Malicious nodes could intentionally cause payment failures or initiate attacks, such as DDoS attacks, by overwhelming other nodes in the network with channel-opening requests. As a result, users will be discouraged from using the LN; hence, the technology will become obsolete as individuals will not waste the time and power investment required for using this technology. Addressing these issues, this paper proposes an innovative invitation model protocol (IMP) to reinforce the LN's security and reliability. The IMP creates an exclusive `Club' within the LN, admitting only nodes verified as honest, thereby bolstering network security and reliability. The protocol empowers Club Founders to expel members exhibiting malicious activities, thereby preserving the invested time, energy, and funds of the network's users. The IMP was rigorously tested using Amazon Web Services Virtual Machines within the Bitcoin and Lightning Network's Testnet environment, which is a highly asymmetric network. The results demonstrated the protocol's efficacy in fulfilling its objectives, marking a significant step towards a safer and more efficient blockchain transaction network. As the blockchain continues to revolutionize the financial sector, implementing robust security measures such as the IMP becomes essential. This research paper introduces a novel approach to enhancing the reliability and security of a Lightning Network (LN), and thus distinguishes itself from the existing literature, by introducing an additional step before establishing or joining such a network. The research underscores the critical role of such protocols in realizing the potential of the LN in powering the next wave of fintech and industrial innovation.},
	author = {Ali Abdullah and A. M. Mutawa},
	date-modified = {2024-05-16 19:22:13 +0200},
	journal = {Computer Science and Symmetry/Asymmetry: Feature Papers},
	keywords = {bitcoin; LN; Asymmetric Lightning Network; Club membership; trustless peer-to-peer network},
	title = {An Invitation Model Protocol (IMP) for the Bitcoin Asymmetric Lightning Network},
	year = {2023}}

@article{riard21,
	abstract = {Lightning Network (LN) is a widely-used network of payment channels enabling faster and cheaper Bitcoin transactions. In this paper, we outline three ways an attacker can steal funds from honest LN users. The attacks require dilating the time for victims to become aware of new blocks by eclipsing (isolating) victims from the network and delaying block delivery. While our focus is on the LN, time-dilation attacks may be relevant to any second-layer protocol that relies on a timely reaction.

According to our measurements, it is currently possible to steal the total channel capacity by keeping a node eclipsed for as little as two hours. Since trust-minimized Bitcoin light clients currently connect to a very limited number of random nodes, running just 500 Sybil nodes allows an attacker to eclipse 47\% of newly deployed light clients (and hence prime them for an attack). As for the victims running a full node, since they are often used by large hubs or service providers, an attacker may justify the higher eclipse attack cost by stealing all their available liquidity.

In addition, time-dilation attacks neither require access to hashrate nor purchasing from a victim. Thus, this class of attacks is a more practical way of stealing funds via eclipse attacks than previously anticipated double-spending.

We argue that simple detection techniques based on the slow block arrival alone are not effective, and implementing more sophisticated detection is not trivial. We suggest that a combination of anti-eclipse/anti-Sybil measures are crucial for mitigating time-dilation attacks.},
	author = {Antoine, Riard and Gleb, Naumenko and Reuben Youngblom},
	date-modified = {2024-05-16 19:19:31 +0200},
	journal = {Computer Science and Symmetry/Asymmetry: Feature Papers},
	keywords = {bitcoin; LN; attacks; time-dilation; Sybil; eclipse},
	title = {Time-Dilation Attacks on the Lightning Network},
	year = {2021}}

@article{guo20,
	abstract = {As a promising method to enable fast and scalable Bitcoin transactions, Bitcoin Lightning Network (LN) has experienced rapid development since the end of 2017. LN utilizes the so-called "payment channels" to provide fast off-chain transactions, thereby offloading on-chain burden and enabling instant payments. With many new protocols proposed to improve the performance of LN, little is known about the current state of the network such as its topology, channel characteristics and application performance. In this paper, we conduct a systematic measurement on LN based on the data collected over a period of fifteen months. This measurement allows us to draw a network graph to study the payment routing success rate and the level of decentralization. We also analyze payment channels regarding their functions. Our work provides an in-depth understanding of network mechanisms and helps to explore future implications of LN.},
	author = {Yuwei Guo and Jinfeng Tong and Chen Feng},
	date-modified = {2024-05-16 19:21:21 +0200},
	journal = {2020 IEEE International Conference on Blockchain (Blockchain)},
	keywords = {bitcoin; LN; measurement; topology; decentralization},
	title = {A Measurement Study of Bitcoin Lightning Network},
	year = {2020}}

@article{rohrer19,
	abstract = {The Lightning Network is the most widely used payment channel network (PCN) to date, making it an attractive attack surface for adversaries. In this paper, we analyze the Lightning Network's PCN topology and investigate its resilience towards random failures and targeted attacks. In particular, we introduce the notions of channel exhaustion and node isolation attacks and show that the Lightning Network is susceptible to these attacks. In a preliminary analysis, we confirm that the Lightning Network can be classified as a small-world and scale-free network. Based on these findings, we develop a series of strategies for targeted attacks and introduce metrics that allow us to quantify the adversary's advantage. Our results indicate that an attacker who is able to remove a certain number of nodes should follow a centrality-based strategy, while a resource-limited attacker who aims for high efficiency should employ a highest ranked minimum cut strategy.},
	author = {Elias, Rohrer and Julian, Malliaris and Florian Tschorsch},
	date-modified = {2024-05-16 19:19:47 +0200},
	journal = {IEEE Security \& Privacy on the Blockchain 2019},
	keywords = {bitcoin; LN; attacks; topology; resilience},
	title = {Discharged Payment Channels: Quantifying the Lightning Network's Resilience to Topology-Based Attacks},
	year = {2019}}

@article{rohrer21,
	abstract = {Payment channel networks, such as Bitcoin's Lightning Network, promise to improve the scalability of blockchain systems by processing the majority of transactions off-chain. Due to the design, the positioning of nodes in the network topology is a highly influential factor regarding the experienced performance, costs, and fee revenue of network participants. As a consequence, today's Lightning Network is built around a small number of highly-connected hubs. Recent literature shows the centralizing tendencies to be incentive-compatible and at the same time detrimental to security and privacy. The choice of attachment strategies therefore becomes a crucial factor for the future of such systems. In this paper, we provide an empirical study on the (local and global) impact of various attachment strategies for payment channel networks. To this end, we introduce candidate strategies from the field of graph theory and analyze them with respect to their computational complexity as well as their repercussions for end users and service providers. Moreover, we evaluate their long-term impact on the network topology.},
	author = {Elias, Rohrer and Julian, Malliaris and Florian Tschorsch},
	date-modified = {2024-05-16 19:20:00 +0200},
	journal = {2021 IEEE International Conference on Blockchain and Cryptocurrency (ICBC)},
	keywords = {bitcoin; LN; attachment strategies; topology; scalability},
	title = {On the impact of attachment strategies for payment channel networks},
	year = {2021}}

@inproceedings{moser16,
	abstract = {This paper presents an extension to Bitcoin's script language enabling covenants, a primitive that allows transactions to restrict how the value they transfer is used in the future. Covenants expand the set of financial instruments expressible in Bitcoin, and enable new powerful and novel use cases. We illustrate two novel security constructs built using covenants.

The first, vaults, focuses on improving the security of private cryptographic keys. Historically, maintaining these keys securely and reliably has been a critical vulnerability for Bitcoin users. We show how covenants enable vaults, which disincentivize key theft by preventing an attacker from gaining full access to stolen funds.

The second construct, poison transactions, is a generally useful mechanism for penalizing double-spending attacks. Bitcoin-NG, a protocol that has been recently proposed to improve Bitcoin's throughput, latency and overall scalability, requires this feature. We show how covenants enable poison transactions, and detail how Bitcoin-NG can be implemented progressively as an overlay on top of the Bitcoin blockchain.},
	author = {M{\"o}ser, Malte and Eyal, Ittay and G{\"u}n Sirer, Emin},
	booktitle = {Financial Cryptography and Data Security},
	keywords = {bitcoin; script; covenants; vaults; poison transactions},
	publisher = {Springer Berlin Heidelberg},
	title = {Bitcoin Covenants},
	year = {2016}}

@article{connor17,
	abstract = {Covenants are Bitcoin Script programs that restrict how funds are allowed to be spent. In previous work [9], M¨oser et. al. implemented covenants with a new Script operation that allows one to programmatically query the transaction. In this paper, we show that covenants can be implemented with a new CHECKSIGFROMSTACK operation that verifies a signature for a message passed as an argument.
When the same public key and signature is used together with CHECKSIG, one can recover transaction data, which then allows one to enforce a covenant. To illustrate our technique, we reimplement M{\"o}ser et. al.'s vault construction for securing funds against key compromise. We use Elements Alpha, a sidechain whose Script language has the needed operations.},
	author = {O'Connor, Russel and Piekarska, Marta},
	keywords = {bitcoin; script; covenants; vaults; CHECKSIGFROMSTACK},
	title = {Enhancing Bitcoin Transactions with Covenants},
	year = {2017}}

@misc{bip-opcat,
	author = {Heilman, Ethan and Sabouri, Armin},
	date-added = {2024-04-27 00:22:40 +0100},
	date-modified = {2024-04-27 00:22:40 +0100},
	howpublished = {\href{https://github.com/EthanHeilman/op_cat_draft/blob/main/cat.mediawiki}{BIP-OPCAT}},
	keywords = {Bitcoin, script, op\_code},
	title = {OP\_CAT}}

@article{swambo20,
	abstract = {A bitcoin covenant is a mechanism to enforce conditions on how the control of coins will be transferred in the future. This work introduces deleted-key covenants; using pre-signed transactions with secure key deletion. With this, a general class of covenants are possible without introducing new security risks to bitcoin. There is a range of security models for the key deletion process, but this is subject to a security-convenience trade-off and requires interactivity in a multi-party context. On the other hand, this work makes a compelling case for what can be gained through a soft-fork upgrade to the signature hash system [Dec17] which enables recovered-key covenants through elliptic curve key recovery. This has similar properties to script-based covenant mechanisms proposed previously [Rub20]. Key factors are discussed and compared for the three covenant mechanisms, including; the enforcement process, methods for proving accessibility of funds and whether or not they are bound by a covenant, methods for dynamic fee allocation, the underlying cryptographic assumptions, and their feasibility in single-party, hierarchical and adversarial multi-party contexts. Despite the relative downsides of deleted-key covenants, they are a practical tool for custody protocol design. The comparison shows precisely how soft-fork proposals improve the practicality of bitcoin covenants, through non-interactive enforcement and tighter cryptographic assumptions, to enhance custody protocols and enable some adversarial applications such as payment protocols.},
	author = {K., Swambo and Hommel, Spencer and \& alt.},
	date-modified = {2024-05-16 19:20:52 +0200},
	journal = {arXiv},
	keywords = {bitcoin; script; covenants; key deletion; key recovery},
	title = {Bitcoin Covenants: Three Ways to Control the Future},
	year = {2020}}

@inproceedings{Bis18,
	author = {Bistarelli, Stefano and Mercanti, Ivan and Santini, Francesco},
	booktitle = {2018 Crypto Valley Conference on Blockchain Technology (CVCBT)},
	doi = {10.1109/CVCBT.2018.00016},
	keywords = {Bitcoin;Public key;Standards;Computer bugs;Digital signatures;Bitcoin;block chain;transactions type},
	pages = {93-96},
	title = {An Analysis of Non-standard Bitcoin Transactions},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1109/CVCBT.2018.00016}}
